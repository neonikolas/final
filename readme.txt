Объект тестирования: РОСТЕЛЕКОМ https://b2c.passport.rt.ru Требования по проекту (.doc) https://docs.google.com/document/d/1Nvu0w4ZaCX5zEIqYF_5P7XvqueshXMJK/edit Заказчик передал вам следующее задание:

Протестировать требования. Разработать тест-кейсы (не менее 15). Необходимо применить несколько техник тест-дизайна. Провести автоматизированное тестирование продукта (не менее 20 автотестов). Заказчик ожидает по одному автотесту на каждый написанный тест-кейс. Оформите свой набор автотестов в GitHub. Оформить описание обнаруженных дефектов. Во время обучения вы работали с разными сервисами и шаблонами, используйте их для оформления тест-кейсов и обнаруженных дефектов. (если дефекты не будут обнаружены, то составить описание трех дефектов) Ожидаемый результат Репозиторий на GitHub содержит:

Чек-лист | Тест-кейсы | Баг-репорты находятся в репазитории

Тесты Авторизации и Регистрации . Тесты разбиты по группам: . test_authorization.py - Тесты авторизации . test_registration.py - Тесты зегистрации

Тестовые данные для проведения тестирования форм на основе данных зарегистрированных пользователей - в файле “tests_data.py”

4.Автотесты для проекта написаны с использованием пакетов Pytest и Selenium, т.к. они обеспечивают удобное тестирование UI web-приложений. Также при написании автотестов использовался паттерн Page Object, который является стандартом в автоматизации тестирования веб-продуктов. В моем случае код написан на основе библиотеки Smart Page Object.

5.Для запуска автотестов необходимо:

установить все библиотеки из файла requirements.txt командой: pip install -r requirements.txt
открыть файлы тестов в папке “tests” и запустить pytest командой "Run pytest in <name_file>.py" в меню Run Pycharm.
6.В ходе тестирования форм авторизации и регистрации,применялись техники: Доменное тестирование, разделение на классы эквивалентности, анализ граничных значений - данные техники позволяют уменьшить количество проводимых тестов для проверки валидных и невалидных значений полей ввода в формах Авторизации и Регистрации. Применение сценариев использования (user cases) - данная техника позволяет проверить полный путь использования формы Авторизации пользователем. Анализ переходов и состояний (диаграммы переходов и состояний) - данная техника позволяет проконтролировать и обеспечить проверки всех возможных реакций системы web-приложения на различные действия пользователя в форме Авторизации. Предугадывание ошибок - данная техника применяется для проверки наиболее распространенных ошибок пользователей при использовании формы Авторизации.